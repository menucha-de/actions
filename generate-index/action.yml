name: 'Generate index.html files for all folders'
description: 'Generate index.html files for all folders to allow directory listing.'
inputs:
  working-directory:
    description: 'Working directory, defaults to current workspace'
    default: '.'
  folder:
    description: 'Sub-folder, defaults to current folder'
    default: ''
  content-include-pattern:
    description: 'RegEx to decide whether to include a folder based on its contents, defaults to including all folders. A folder will be included if it contains at least one file or sub folder matching the specified pattern (egrep is used).'
    default: ''
  repository:
    description: 'Name of repository to index, without .git, defaults to current folder name'
    default: '${PWD##*/}'

runs:
  using: "composite"
  steps: 
    - run: |
           set -x
           CONTENT_INCLUDE_PATTERN="${{ inputs.content-include-pattern }}"
           URL_ROOT=${{ inputs.repository }}
           FOLDER=${{ inputs.folder }}
           ROOT=${PWD}
           LEN=${#ROOT}
           set +x
           write_index() {
             fulldir=$1
             skip=0
             if [ -n "$CONTENT_INCLUDE_PATTERN" ]; then
               match_count=$(ls ${fulldir} | egrep -c "${CONTENT_INCLUDE_PATTERN}" || true)
               if [ $match_count -eq 0 ]; then
                 skip=1
               fi
             fi
             if [ $skip -eq 1 ]; then
               echo "Skipping folder ${fulldir}"
             else
               dir=${fulldir:$LEN}
               index_file=$(mktemp)
               cat >> ${index_file} << EOF
           <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
           <html>
            <head>
             <title>Index of /${URL_ROOT}${dir}</title>
             <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
             <meta http-equiv="Pragma" content="no-cache" />
             <meta http-equiv="Expires" content="0" />
            </head>
            <body>
             <h1>Index of /${URL_ROOT}${dir}</h1>
             <table>
           EOF
               if [ ${#dir} -gt 0 ]; then
                 cat >> ${index_file} << EOF
              <tr><td><a href="../">../</a></td></tr>
           EOF
               fi
               let len=${#fulldir}+1
               find "$fulldir" -mindepth 1 -maxdepth 1 -type d -not -name ".git" -not -name ".github" -print0 | while IFS= read -r -d '' fulldirname
               do
                 dirname="${fulldirname:$len}/"
                 cat >> ${index_file} << EOF
              <tr><td><a href="${dirname}">${dirname}</a></td></tr>
           EOF
               done
               find "$fulldir" -mindepth 1 -maxdepth 1 -type f -not -name "index.html" -print0 | while IFS= read -r -d '' fullfilename
               do
                 filename="${fullfilename:$len}"
                 cat >> ${index_file} << EOF
              <tr><td><a href="${filename}">${filename}</a></td></tr>
           EOF
               done
               cat >> ${index_file} << EOF
             </table>
            </body>
           </html>
           EOF
               mv "${index_file}" "${fulldir}/index.html"
               echo "Wrote index to ${fulldir}/index.html"
             fi
           }
           find "$ROOT$FOLDER" -type f -name "index.html" -exec rm {} \;
           find "$ROOT$FOLDER" -type d -not -path "$ROOT/.git/*" -not -path "$ROOT/.git" -not -path "$ROOT/.github/*" -not -path "$ROOT/.github" -print0 | while IFS= read -r -d '' currdir
           do
             write_index "$currdir"
           done
      working-directory: ${{ inputs.working-directory }}
      shell: bash
branding:
  icon: list
  color: black
